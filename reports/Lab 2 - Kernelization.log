Traceback (most recent call last):
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/jvanscho/miniforge3/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/jvanscho/miniforge3/lib/python3.9/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Auto-setup when running on Google Colab
if 'google.colab' in str(get_ipython()):
    !pip install openml

# General imports
%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import openml as oml
from matplotlib import cm
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
[0;32m/var/folders/0t/5d8ttqzd773fy0wq3h5db0xr0000gn/T/ipykernel_59181/4049518288.py[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0;34m[0m[0m
[1;32m      5[0m [0;31m# General imports[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0mget_ipython[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mrun_line_magic[0m[0;34m([0m[0;34m'matplotlib'[0m[0;34m,[0m [0;34m'inline'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m [0;32mimport[0m [0mpandas[0m [0;32mas[0m [0mpd[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/IPython/core/interactiveshell.py[0m in [0;36mrun_line_magic[0;34m(self, magic_name, line, _stack_depth)[0m
[1;32m   2362[0m                 [0mkwargs[0m[0;34m[[0m[0;34m'local_ns'[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_local_scope[0m[0;34m([0m[0mstack_depth[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2363[0m             [0;32mwith[0m [0mself[0m[0;34m.[0m[0mbuiltin_trap[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2364[0;31m                 [0mresult[0m [0;34m=[0m [0mfn[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2365[0m             [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2366[0m [0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/decorator.py[0m in [0;36mfun[0;34m(*args, **kw)[0m
[1;32m    230[0m             [0;32mif[0m [0;32mnot[0m [0mkwsyntax[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    231[0m                 [0margs[0m[0;34m,[0m [0mkw[0m [0;34m=[0m [0mfix[0m[0;34m([0m[0margs[0m[0;34m,[0m [0mkw[0m[0;34m,[0m [0msig[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 232[0;31m             [0;32mreturn[0m [0mcaller[0m[0;34m([0m[0mfunc[0m[0;34m,[0m [0;34m*[0m[0;34m([0m[0mextras[0m [0;34m+[0m [0margs[0m[0;34m)[0m[0;34m,[0m [0;34m**[0m[0mkw[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    233[0m     [0mfun[0m[0;34m.[0m[0m__name__[0m [0;34m=[0m [0mfunc[0m[0;34m.[0m[0m__name__[0m[0;34m[0m[0;34m[0m[0m
[1;32m    234[0m     [0mfun[0m[0;34m.[0m[0m__doc__[0m [0;34m=[0m [0mfunc[0m[0;34m.[0m[0m__doc__[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/IPython/core/magic.py[0m in [0;36m<lambda>[0;34m(f, *a, **k)[0m
[1;32m    185[0m     [0;31m# but it's overkill for just that one bit of state.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    186[0m     [0;32mdef[0m [0mmagic_deco[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 187[0;31m         [0mcall[0m [0;34m=[0m [0;32mlambda[0m [0mf[0m[0;34m,[0m [0;34m*[0m[0ma[0m[0;34m,[0m [0;34m**[0m[0mk[0m[0;34m:[0m [0mf[0m[0;34m([0m[0;34m*[0m[0ma[0m[0;34m,[0m [0;34m**[0m[0mk[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    188[0m [0;34m[0m[0m
[1;32m    189[0m         [0;32mif[0m [0mcallable[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/IPython/core/magics/pylab.py[0m in [0;36mmatplotlib[0;34m(self, line)[0m
[1;32m     97[0m             [0mprint[0m[0;34m([0m[0;34m"Available matplotlib backends: %s"[0m [0;34m%[0m [0mbackends_list[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     98[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 99[0;31m             [0mgui[0m[0;34m,[0m [0mbackend[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mshell[0m[0;34m.[0m[0menable_matplotlib[0m[0;34m([0m[0margs[0m[0;34m.[0m[0mgui[0m[0;34m.[0m[0mlower[0m[0;34m([0m[0;34m)[0m [0;32mif[0m [0misinstance[0m[0;34m([0m[0margs[0m[0;34m.[0m[0mgui[0m[0;34m,[0m [0mstr[0m[0;34m)[0m [0;32melse[0m [0margs[0m[0;34m.[0m[0mgui[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    100[0m             [0mself[0m[0;34m.[0m[0m_show_matplotlib_backend[0m[0;34m([0m[0margs[0m[0;34m.[0m[0mgui[0m[0;34m,[0m [0mbackend[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    101[0m [0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/IPython/core/interactiveshell.py[0m in [0;36menable_matplotlib[0;34m(self, gui)[0m
[1;32m   3531[0m         """
[1;32m   3532[0m         [0;32mfrom[0m [0mIPython[0m[0;34m.[0m[0mcore[0m [0;32mimport[0m [0mpylabtools[0m [0;32mas[0m [0mpt[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3533[0;31m         [0;32mfrom[0m [0mmatplotlib_inline[0m[0;34m.[0m[0mbackend_inline[0m [0;32mimport[0m [0mconfigure_inline_support[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3534[0m         [0mgui[0m[0;34m,[0m [0mbackend[0m [0;34m=[0m [0mpt[0m[0;34m.[0m[0mfind_gui_and_backend[0m[0;34m([0m[0mgui[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mpylab_gui_select[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3535[0m [0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib_inline/backend_inline.py[0m in [0;36m<module>[0;34m[0m
[1;32m    221[0m [0;34m[0m[0m
[1;32m    222[0m [0;34m[0m[0m
[0;32m--> 223[0;31m [0m_enable_matplotlib_integration[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    224[0m [0;34m[0m[0m
[1;32m    225[0m [0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib_inline/backend_inline.py[0m in [0;36m_enable_matplotlib_integration[0;34m()[0m
[1;32m    210[0m         [0;32mfrom[0m [0mIPython[0m[0;34m.[0m[0mcore[0m[0;34m.[0m[0mpylabtools[0m [0;32mimport[0m [0mactivate_matplotlib[0m[0;34m[0m[0;34m[0m[0m
[1;32m    211[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 212[0;31m             [0mactivate_matplotlib[0m[0;34m([0m[0mbackend[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    213[0m             [0mconfigure_inline_support[0m[0;34m([0m[0mip[0m[0;34m,[0m [0mbackend[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    214[0m         [0;32mexcept[0m [0;34m([0m[0mImportError[0m[0;34m,[0m [0mAttributeError[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/IPython/core/pylabtools.py[0m in [0;36mactivate_matplotlib[0;34m(backend)[0m
[1;32m    355[0m     [0;31m# when this function runs.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    356[0m     [0;31m# So avoid needing matplotlib attribute-lookup to access pyplot.[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 357[0;31m     [0;32mfrom[0m [0mmatplotlib[0m [0;32mimport[0m [0mpyplot[0m [0;32mas[0m [0mplt[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    358[0m [0;34m[0m[0m
[1;32m    359[0m     [0mplt[0m[0;34m.[0m[0mswitch_backend[0m[0;34m([0m[0mbackend[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/pyplot.py[0m in [0;36m<module>[0;34m[0m
[1;32m     47[0m [0;32mfrom[0m [0mcycler[0m [0;32mimport[0m [0mcycler[0m[0;34m[0m[0;34m[0m[0m
[1;32m     48[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 49[0;31m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mcolorbar[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     50[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mimage[0m[0;34m[0m[0;34m[0m[0m
[1;32m     51[0m [0;32mfrom[0m [0mmatplotlib[0m [0;32mimport[0m [0m_api[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/colorbar.py[0m in [0;36m<module>[0;34m[0m
[1;32m     19[0m [0;34m[0m[0m
[1;32m     20[0m [0;32mimport[0m [0mmatplotlib[0m [0;32mas[0m [0mmpl[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m [0;32mfrom[0m [0mmatplotlib[0m [0;32mimport[0m [0m_api[0m[0;34m,[0m [0mcollections[0m[0;34m,[0m [0mcm[0m[0;34m,[0m [0mcolors[0m[0;34m,[0m [0mcontour[0m[0;34m,[0m [0mticker[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0martist[0m [0;32mas[0m [0mmartist[0m[0;34m[0m[0;34m[0m[0m
[1;32m     23[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mpatches[0m [0;32mas[0m [0mmpatches[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/collections.py[0m in [0;36m<module>[0;34m[0m
[1;32m     32[0m     [0;34m"linewidth"[0m[0;34m:[0m [0;34m[[0m[0;34m"linewidths"[0m[0;34m,[0m [0;34m"lw"[0m[0;34m][0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m })
[0;32m---> 34[0;31m [0;32mclass[0m [0mCollection[0m[0;34m([0m[0martist[0m[0;34m.[0m[0mArtist[0m[0;34m,[0m [0mcm[0m[0;34m.[0m[0mScalarMappable[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     35[0m     r"""
[1;32m     36[0m     [0mBase[0m [0;32mclass[0m [0;32mfor[0m [0mCollections[0m[0;34m.[0m [0mMust[0m [0mbe[0m [0msubclassed[0m [0mto[0m [0mbe[0m [0musable[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/artist.py[0m in [0;36m__init_subclass__[0;34m(cls)[0m
[1;32m    117[0m         [0mcls[0m[0;34m.[0m[0mset[0m[0;34m.[0m[0m__name__[0m [0;34m=[0m [0;34m"set"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    118[0m         [0mcls[0m[0;34m.[0m[0mset[0m[0;34m.[0m[0m__qualname__[0m [0;34m=[0m [0;34mf"{cls.__qualname__}.set"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 119[0;31m         [0mcls[0m[0;34m.[0m[0m_update_set_signature_and_docstring[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    120[0m [0;34m[0m[0m
[1;32m    121[0m     _PROPERTIES_EXCLUDED_FROM_SET = [

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/artist.py[0m in [0;36m_update_set_signature_and_docstring[0;34m(cls)[0m
[1;32m    145[0m             [0;34m"Set multiple properties at once.\n\n"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    146[0m             [0;34m"Supported properties are\n\n"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 147[0;31m             + kwdoc(cls))
[0m[1;32m    148[0m [0;34m[0m[0m
[1;32m    149[0m     [0;32mdef[0m [0m__init__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/artist.py[0m in [0;36mkwdoc[0;34m(artist)[0m
[1;32m   1747[0m     return ('\n'.join(ai.pprint_setters_rest(leadingspace=4))
[1;32m   1748[0m             [0;32mif[0m [0mmpl[0m[0;34m.[0m[0mrcParams[0m[0;34m[[0m[0;34m'docstring.hardcopy'[0m[0;34m][0m [0;32melse[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1749[0;31m             'Properties:\n' + '\n'.join(ai.pprint_setters(leadingspace=4)))
[0m[1;32m   1750[0m [0;34m[0m[0m
[1;32m   1751[0m [0;31m# We defer this to the end of them module, because it needs ArtistInspector[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/artist.py[0m in [0;36mpprint_setters[0;34m(self, prop, leadingspace)[0m
[1;32m   1508[0m         [0mlines[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m   1509[0m         [0;32mfor[0m [0mprop[0m [0;32min[0m [0msorted[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mget_setters[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1510[0;31m             [0maccepts[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_valid_values[0m[0;34m([0m[0mprop[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1511[0m             [0mname[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0maliased_name[0m[0;34m([0m[0mprop[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1512[0m             [0mlines[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0;34m'%s%s: %s'[0m [0;34m%[0m [0;34m([0m[0mpad[0m[0;34m,[0m [0mname[0m[0;34m,[0m [0maccepts[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/site-packages/matplotlib/artist.py[0m in [0;36mget_valid_values[0;34m(self, attr)[0m
[1;32m   1403[0m         [0;31m# We could set the presence * based on whether the parameter is a[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1404[0m         [0;31m# varargs (it can't be a varkwargs) but it's not really worth the it.[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1405[0;31m         [0mmatch[0m [0;34m=[0m [0mre[0m[0;34m.[0m[0msearch[0m[0;34m([0m[0;34mr"(?m)^ *\*?{} : (.+)"[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mparam_name[0m[0;34m)[0m[0;34m,[0m [0mdocstring[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1406[0m         [0;32mif[0m [0mmatch[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1407[0m             [0;32mreturn[0m [0mmatch[0m[0;34m.[0m[0mgroup[0m[0;34m([0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/re.py[0m in [0;36msearch[0;34m(pattern, string, flags)[0m
[1;32m    199[0m     """Scan through string looking for a match to the pattern, returning
[1;32m    200[0m     a Match object, or None if no match was found."""
[0;32m--> 201[0;31m     [0;32mreturn[0m [0m_compile[0m[0;34m([0m[0mpattern[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m.[0m[0msearch[0m[0;34m([0m[0mstring[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    202[0m [0;34m[0m[0m
[1;32m    203[0m [0;32mdef[0m [0msub[0m[0;34m([0m[0mpattern[0m[0;34m,[0m [0mrepl[0m[0;34m,[0m [0mstring[0m[0;34m,[0m [0mcount[0m[0;34m=[0m[0;36m0[0m[0;34m,[0m [0mflags[0m[0;34m=[0m[0;36m0[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniforge3/lib/python3.9/re.py[0m in [0;36m_compile[0;34m(pattern, flags)[0m
[1;32m    302[0m     [0;32mif[0m [0;32mnot[0m [0msre_compile[0m[0;34m.[0m[0misstring[0m[0;34m([0m[0mpattern[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    303[0m         [0;32mraise[0m [0mTypeError[0m[0;34m([0m[0;34m"first argument must be string or compiled pattern"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 304[0;31m     [0mp[0m [0;34m=[0m [0msre_compile[0m[0;34m.[0m[0mcompile[0m[0;34m([0m[0mpattern[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    305[0m     [0;32mif[0m [0;32mnot[0m [0;34m([0m[0mflags[0m [0;34m&[0m [0mDEBUG[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    306[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0m_cache[0m[0;34m)[0m [0;34m>=[0m [0m_MAXCACHE[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

